Index: frontend/src/components/header/buttons/LogoutButton.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport { useMsal } from \"@azure/msal-react\";\r\n\r\nimport HeaderButton from './HeaderButton';\r\nimport { Paths } from '../../../constants/paths';\r\n\r\n\r\nconst LogoutButton = () => {\r\n    const { instance } = useMsal();\r\n\r\n    const handleLogout = () => {\r\n        instance.logoutRedirect({\r\n            postLogoutRedirectUri: Paths.profile,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <HeaderButton\r\n            onClick={handleLogout}\r\n            iconLight=\"bi-box-arrow-in-left\"\r\n            iconDark=\"bi-box-arrow-in-left\"\r\n            title=\"Ausloggen\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default LogoutButton;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/header/buttons/LogoutButton.tsx b/frontend/src/components/header/buttons/LogoutButton.tsx
--- a/frontend/src/components/header/buttons/LogoutButton.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/header/buttons/LogoutButton.tsx	(date 1729937618193)
@@ -10,7 +10,7 @@
 
     const handleLogout = () => {
         instance.logoutRedirect({
-            postLogoutRedirectUri: Paths.profile,
+            postLogoutRedirectUri: Paths.home,
         });
     };
 
Index: frontend/src/App.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { RouterProvider } from 'react-router-dom';\r\nimport { MsalProvider } from \"@azure/msal-react\";\r\nimport { msalInstance } from \"./config/msalConfig\";\r\nimport { router } from './router/router';\r\nimport { AppInitializer } from './AppInitializer';\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n    <MsalProvider instance={msalInstance}>\r\n      <AppInitializer>\r\n        <RouterProvider router={router} />\r\n      </AppInitializer>\r\n    </MsalProvider>\r\n  );\r\n};
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/App.tsx b/frontend/src/App.tsx
--- a/frontend/src/App.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/App.tsx	(date 1729937618183)
@@ -2,14 +2,14 @@
 import { MsalProvider } from "@azure/msal-react";
 import { msalInstance } from "./config/msalConfig";
 import { router } from './router/router';
-import { AppInitializer } from './AppInitializer';
+import {AppInitializer} from './AppInitializer';
 
 export const App = () => {
 
   return (
     <MsalProvider instance={msalInstance}>
       <AppInitializer>
-        <RouterProvider router={router} />
+      <RouterProvider router={router} />
       </AppInitializer>
     </MsalProvider>
   );
Index: frontend/src/components/skills-filters/SkillsFilter.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectSkills } from '../../features/skills/skillsSlice'\r\nimport { SkillAccordion } from '../skills-accordion/SkillAccordion'\r\n\r\nconst SkillsFilter = () => {\r\n  const skills = useSelector(selectSkills)\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <SkillAccordion\r\n        title='Mitarbeiter filtern'\r\n        skills={skills}\r\n        size={12}\r\n        value={{ type: 'FILTER' }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SkillsFilter
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/skills-filters/SkillsFilter.tsx b/frontend/src/components/skills-filters/SkillsFilter.tsx
--- a/frontend/src/components/skills-filters/SkillsFilter.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/skills-filters/SkillsFilter.tsx	(date 1729937618202)
@@ -12,7 +12,7 @@
         title='Mitarbeiter filtern'
         skills={skills}
         size={12}
-        value={{ type: 'FILTER' }}
+        value='FILTER'
       />
     </div>
   )
Index: frontend/src/constants/paths.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export const Paths = {\r\n    profile: '/profile',\r\n    search: '/search'\r\n} as const 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/constants/paths.ts b/frontend/src/constants/paths.ts
--- a/frontend/src/constants/paths.ts	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/constants/paths.ts	(date 1729937618205)
@@ -1,4 +1,4 @@
 export const Paths = {
-    profile: '/profile',
+    home: '/',
     search: '/search'
 } as const 
\ No newline at end of file
Index: frontend/src/components/skills-accordion/utils.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { ActiveFilters } from \"../../features/activeFilters/activeFiltersSlice\";\r\nimport { IEmployee } from \"../../features/currentUser/currentUserSlice\";\r\nimport { Skill } from \"../../features/skills/skillsSlice\";\r\n\r\nexport const groupSkillsBySubcategory = (skills: Skill[]) => {\r\n  return skills.reduce((acc, skill) => {\r\n    const subcategory = skill.skillSubcategory.skillSubcategoryName;\r\n    if (!acc[subcategory]) {\r\n      acc[subcategory] = [];\r\n    }\r\n    acc[subcategory].push(skill);\r\n    return acc;\r\n  }, {} as { [key: string]: Skill[] });\r\n};\r\n\r\nexport const getFilterCount = (\r\n  activeFilters: ActiveFilters,\r\n  user: IEmployee | undefined,\r\n  subcategoryName: string\r\n) => {\r\n  let filterCount = 0\r\n\r\n  activeFilters.skillFilters.forEach(activeFilter => {\r\n    console.log(user);\r\n    \r\n    user?.employeeSkills.forEach(employeeSkill => {\r\n      if (employeeSkill.skill.skillSubcategory.skillSubcategoryName === subcategoryName\r\n        && employeeSkill.skill.skillId === parseInt(activeFilter.skillId)\r\n        && parseInt(employeeSkill.level.levelId) >= parseInt(activeFilter.levelId)\r\n      ) {\r\n        if(subcategoryName === 'Backend Entwicklung') {\r\n          console.log(employeeSkill.skill.skillName);\r\n        }\r\n        \r\n        filterCount++\r\n      }\r\n    })\r\n  })\r\n\r\n  return filterCount\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/skills-accordion/utils.ts b/frontend/src/components/skills-accordion/utils.ts
--- a/frontend/src/components/skills-accordion/utils.ts	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/skills-accordion/utils.ts	(date 1729937618201)
@@ -1,5 +1,8 @@
+<<<<<<< HEAD
 import { ActiveFilters } from "../../features/activeFilters/activeFiltersSlice";
 import { IEmployee } from "../../features/currentUser/currentUserSlice";
+=======
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
 import { Skill } from "../../features/skills/skillsSlice";
 
 export const groupSkillsBySubcategory = (skills: Skill[]) => {
@@ -12,6 +15,7 @@
     return acc;
   }, {} as { [key: string]: Skill[] });
 };
+<<<<<<< HEAD
 
 export const getFilterCount = (
   activeFilters: ActiveFilters,
@@ -41,3 +45,5 @@
 }
 
 
+=======
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
Index: frontend/src/components/header/Header.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { Image } from 'react-bootstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectTheme } from '../../features/theme/themeSlice';\r\n\r\nimport { Paths } from '../../constants/paths';\r\nimport LightLogo from '../../img/dataciders_quinscape_black.png';\r\nimport './header.css';\r\n\r\nimport { styles as currentStyles } from '../../styles/styles';\r\nimport LogoutButton from './buttons/LogoutButton';\r\nimport ThemeButton from './buttons/ThemeButton';\r\n\r\nconst Header = () => {\r\n    const location = useLocation();\r\n    const theme = useSelector(selectTheme);\r\n    const styles = currentStyles(theme);\r\n\r\n    return (\r\n        <Navbar style={styles.navbar}>\r\n            <Container>\r\n                <Navbar.Brand as={Link} to={Paths.profile} style={{ marginRight: '30px' }}>\r\n                    <Image\r\n                        src={LightLogo}\r\n                        className='logo-img'\r\n                    />\r\n                </Navbar.Brand>\r\n\r\n                <Nav className=\"me-auto\">\r\n                    <Nav.Link\r\n                        as={Link}\r\n                        to={Paths.profile}\r\n                        style={location.pathname === Paths.profile ? styles.navLinkActive : styles.navLink}\r\n                    >\r\n                        Profil\r\n                    </Nav.Link>\r\n                    <Nav.Link\r\n                        as={Link}\r\n                        to={Paths.search}\r\n                        style={location.pathname === Paths.search ? styles.navLinkActive : styles.navLink}\r\n                        className='nav-link'>\r\n                        Suchen\r\n                    </Nav.Link>\r\n                </Nav>\r\n\r\n                <ThemeButton />\r\n                <LogoutButton />\r\n\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/header/Header.tsx b/frontend/src/components/header/Header.tsx
--- a/frontend/src/components/header/Header.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/header/Header.tsx	(date 1729937618191)
@@ -23,7 +23,11 @@
     return (
         <Navbar style={styles.navbar}>
             <Container>
+<<<<<<< HEAD
                 <Navbar.Brand as={Link} to={Paths.profile} style={{ marginRight: '30px' }}>
+=======
+                <Navbar.Brand href={Paths.home} style={{ marginRight: '30px' }}>
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
                     <Image
                         src={LightLogo}
                         className='logo-img'
@@ -32,9 +36,14 @@
 
                 <Nav className="me-auto">
                     <Nav.Link
+<<<<<<< HEAD
                         as={Link}
                         to={Paths.profile}
                         style={location.pathname === Paths.profile ? styles.navLinkActive : styles.navLink}
+=======
+                        href={Paths.home}
+                        style={location.pathname === Paths.home ? styles.navLinkActive : styles.navLink}
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
                     >
                         Profil
                     </Nav.Link>
Index: frontend/src/AppInitializer.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { ReactNode } from \"react\";\r\n\r\nimport { useMsalAuthentication } from \"./hooks/useMsalAuthentication\";\r\nimport Spinner from \"./components/spinner/Spinner\";\r\nimport { useGetSkillsQuery } from \"./app/services/skills\";\r\nimport { useGetEmloyeesQuery } from \"./app/services/employees\";\r\nimport { useGetCurrentUserQuery } from \"./app/services/currentUser\";\r\n\r\ninterface ProtectedAppInitializerProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AppInitializer = ({ children }: ProtectedAppInitializerProps) => {\r\n  const { inProgress, isAuthenticated } = useMsalAuthentication();\r\n  const { data: skills, isLoading: skillsLoading } = useGetSkillsQuery();\r\n  const { data: employees, isLoading: employeesLoading } = useGetEmloyeesQuery();\r\n  const { data: currentUser, isLoading: userLoading } = useGetCurrentUserQuery()\r\n\r\n  const isLoading = skillsLoading || employeesLoading || userLoading;\r\n\r\n  if (isLoading || ((inProgress === \"login\" || inProgress === \"none\") && !isAuthenticated)) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/AppInitializer.tsx b/frontend/src/AppInitializer.tsx
--- a/frontend/src/AppInitializer.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/AppInitializer.tsx	(date 1729937618184)
@@ -1,5 +1,4 @@
 import { ReactNode } from "react";
-
 import { useMsalAuthentication } from "./hooks/useMsalAuthentication";
 import Spinner from "./components/spinner/Spinner";
 import { useGetSkillsQuery } from "./app/services/skills";
Index: frontend/src/components/skills-accordion/SkillAccordion.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport { Accordion, Row, Col } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { skillsIcons } from '../../constants/skillsIcons';\r\nimport LevelSelect, { LevelType } from '../level-select/LevelSelect';\r\nimport { selectTheme } from '../../features/theme/themeSlice';\r\nimport { styles as currentStyles } from '../../styles/styles';\r\nimport { Skill } from '../../features/skills/skillsSlice';\r\nimport { groupSkillsBySubcategory } from './utils';\r\nimport AccordionHeader from './AccordionHeader';\r\nimport './skillsAccordion.css';\r\n\r\ninterface SkillAccordionProps {\r\n  title: string,\r\n  skills: Skill[],\r\n  size: number,\r\n  value: LevelType\r\n}\r\n\r\nexport const SkillAccordion: React.FC<SkillAccordionProps> = ({ title, skills, size, value }) => {\r\n  const theme = useSelector(selectTheme);\r\n  const styles = currentStyles(theme);\r\n\r\n  const groupedSkills = groupSkillsBySubcategory(skills);\r\n\r\n  return (\r\n    <Col md={size}>\r\n      <h5 style={{ color: styles.card.color }}>{title}</h5>\r\n      <Accordion>\r\n        {Object.entries(groupedSkills).map(([subcategoryName, skills], index) => {\r\n          const icon = skillsIcons[subcategoryName as keyof typeof skillsIcons];\r\n\r\n          return (\r\n            <Accordion.Item eventKey={index.toString()} key={index}>\r\n              <AccordionHeader\r\n                icon={icon}\r\n                subcategoryName={subcategoryName}\r\n                value={value}\r\n              />\r\n              <Accordion.Body>\r\n                <Row>\r\n                  {skills.map((skill, skillIndex) => (\r\n                    <Col md={size} key={skillIndex} className=\"mb-2\">\r\n                      <LevelSelect\r\n                        skillId={skill.skillId.toString()}\r\n                        showAll={true}\r\n                        value={value}\r\n                      />\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })}\r\n      </Accordion>\r\n    </Col>\r\n  );\r\n};
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/skills-accordion/SkillAccordion.tsx b/frontend/src/components/skills-accordion/SkillAccordion.tsx
--- a/frontend/src/components/skills-accordion/SkillAccordion.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/skills-accordion/SkillAccordion.tsx	(date 1729937618197)
@@ -8,7 +8,6 @@
 import { styles as currentStyles } from '../../styles/styles';
 import { Skill } from '../../features/skills/skillsSlice';
 import { groupSkillsBySubcategory } from './utils';
-import AccordionHeader from './AccordionHeader';
 import './skillsAccordion.css';
 
 interface SkillAccordionProps {
@@ -33,11 +32,11 @@
 
           return (
             <Accordion.Item eventKey={index.toString()} key={index}>
-              <AccordionHeader
-                icon={icon}
-                subcategoryName={subcategoryName}
-                value={value}
-              />
+              <Accordion.Header>
+                {icon ? React.cloneElement(icon, { style: { marginRight: '8px' } }) : null}
+                {subcategoryName}
+              </Accordion.Header>
+
               <Accordion.Body>
                 <Row>
                   {skills.map((skill, skillIndex) => (
Index: frontend/src/constants/skillsIcons.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { \r\n    FaBrain, \r\n    FaHandshake, \r\n    FaUserTie, \r\n    FaComments, \r\n    FaCode, \r\n    FaServer, \r\n    FaDatabase, \r\n    FaTools, \r\n    FaFlask, \r\n    FaLanguage, \r\n    FaAtom, \r\n    FaIndustry, \r\n    FaStar \r\n} from 'react-icons/fa';\r\n\r\nexport const skillsIcons = {\r\n    \"Methodische Skills\": <FaBrain />,\r\n    \"Soziale Skills\": <FaHandshake />,\r\n    \"Personale Skills\": <FaUserTie />,\r\n    \"Kommunikative Skills\": <FaComments />,\r\n    \"Frontend Entwicklung\": <FaCode />,\r\n    \"Backend Entwicklung\": <FaServer />,\r\n    \"Datenbanken\": <FaDatabase />,\r\n    \"DevOps\": <FaTools />,\r\n    \"Testing\": <FaFlask />,\r\n    \"Sprachen\": <FaLanguage />,\r\n    \"Wissenschaften\": <FaAtom />,\r\n    \"Kundenkenntnisse\": <FaIndustry />,\r\n    \"Technologie Stack\": <FaStar />\r\n};
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/constants/skillsIcons.tsx b/frontend/src/constants/skillsIcons.tsx
--- a/frontend/src/constants/skillsIcons.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/constants/skillsIcons.tsx	(date 1729937618206)
@@ -1,18 +1,4 @@
-import { 
-    FaBrain, 
-    FaHandshake, 
-    FaUserTie, 
-    FaComments, 
-    FaCode, 
-    FaServer, 
-    FaDatabase, 
-    FaTools, 
-    FaFlask, 
-    FaLanguage, 
-    FaAtom, 
-    FaIndustry, 
-    FaStar 
-} from 'react-icons/fa';
+import { FaBrain, FaHandshake, FaUserTie, FaComments, FaCode, FaServer, FaDatabase, FaTools, FaFlask, FaLanguage, FaAtom, FaIndustry, FaStar } from 'react-icons/fa';
 
 export const skillsIcons = {
     "Methodische Skills": <FaBrain />,
Index: frontend/src/components/skills-accordion/SkillAccordions.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { selectSkills } from '../../features/skills/skillsSlice';\r\nimport { SkillAccordion } from './SkillAccordion';\r\nimport { type LevelType } from '../level-select/LevelSelect';\r\n\r\nconst SkillAccordions: React.FC<LevelType> = (value) => {\r\n  const skills = useSelector(selectSkills);\r\n  const softSkills = skills.filter(skill => skill.skillSubcategory.skillCategory.skillCategoryId === 1);\r\n  const hardSkills = skills.filter(skill => skill.skillSubcategory.skillCategory.skillCategoryId === 2);  \r\n\r\n  return (\r\n    <Row>\r\n      <SkillAccordion\r\n        title=\"Soft Skills\"\r\n        skills={softSkills}\r\n        size={6}\r\n        value={value}\r\n      />\r\n      <SkillAccordion\r\n        title=\"Hard Skills\"\r\n        skills={hardSkills}\r\n        size={6}\r\n        value={value}\r\n        />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SkillAccordions;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/skills-accordion/SkillAccordions.tsx b/frontend/src/components/skills-accordion/SkillAccordions.tsx
--- a/frontend/src/components/skills-accordion/SkillAccordions.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/skills-accordion/SkillAccordions.tsx	(date 1729937618199)
@@ -1,15 +1,13 @@
 import React from 'react';
 import { Row } from 'react-bootstrap';
 import { useSelector } from 'react-redux';
-
 import { selectSkills } from '../../features/skills/skillsSlice';
 import { SkillAccordion } from './SkillAccordion';
-import { type LevelType } from '../level-select/LevelSelect';
 
-const SkillAccordions: React.FC<LevelType> = (value) => {
+const SkillAccordions: React.FC = () => {
   const skills = useSelector(selectSkills);
   const softSkills = skills.filter(skill => skill.skillSubcategory.skillCategory.skillCategoryId === 1);
-  const hardSkills = skills.filter(skill => skill.skillSubcategory.skillCategory.skillCategoryId === 2);  
+  const hardSkills = skills.filter(skill => skill.skillSubcategory.skillCategory.skillCategoryId === 2);
 
   return (
     <Row>
@@ -17,14 +15,13 @@
         title="Soft Skills"
         skills={softSkills}
         size={6}
-        value={value}
+        value='USER'
       />
       <SkillAccordion
         title="Hard Skills"
         skills={hardSkills}
         size={6}
-        value={value}
-        />
+        value='USER' />
     </Row>
   );
 };
Index: frontend/src/components/level-select/utils.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { ActiveFilters, SkillFilter } from '../../features/activeFilters/activeFiltersSlice';\r\nimport { EmployeeSkill} from '../../features/currentUser/currentUserSlice';\r\nimport { type Level } from '../../app/services/levels';\r\nimport { ThemeMode } from '../../features/theme/themeSlice';\r\nimport { styles as currentStyles } from '../../styles/styles';\r\nimport { LevelType } from './LevelSelect';\r\nimport { Skill } from '../../features/skills/skillsSlice';\r\n\r\nexport const getColorForLevel = (index: number, theme: ThemeMode, levels: Level[]) : string => {\r\n    const styles = currentStyles(theme);\r\n\r\n    const colorStart = styles.level.startColor;\r\n    const colorEnd = styles.level.endColor;\r\n    const ratio = index / (levels.length - 1);\r\n    const mix = (start: number, end: number) => Math.round(start + ratio * (end - start));\r\n\r\n    const startRGB = colorStart.match(/\\w\\w/g)?.map((x) => parseInt(x, 16)) || [0, 0, 0];\r\n    const endRGB = colorEnd.match(/\\w\\w/g)?.map((x) => parseInt(x, 16)) || [0, 0, 0];\r\n\r\n    const mixedRGB = startRGB.map((start, i) => mix(start, endRGB[i]));\r\n\r\n    return `rgb(${mixedRGB.join(',')})`;\r\n};\r\n\r\nexport const getSelectedLevel = (\r\n    value: LevelType,\r\n    skillId: string,\r\n    activeFilters: SkillFilter[],\r\n    levels: Level[]\r\n): number => {\r\n    if (value.type === 'USER' && 'user' in value && value.user) {\r\n        const userSkill = value.user.employeeSkills.find(\r\n            (employeeSkill: EmployeeSkill) => employeeSkill.skill.skillId === +skillId);\r\n        return userSkill ? levels.findIndex(level => level.levelId === userSkill.level.levelId) + 1 : 0;\r\n    } else {\r\n        const activeFilter = activeFilters.find(filter => filter.skillId === skillId);\r\n        return activeFilter ? levels.findIndex(level => level.levelId === activeFilter.levelId) + 1 : 0;\r\n    }\r\n};\r\n\r\nexport const isActiveSkill = (\r\n    skill : Skill,\r\n    value : LevelType,\r\n    isNotCurrentUser : boolean,\r\n    activeFilters : ActiveFilters\r\n) : boolean => {\r\n    if(value.type === 'USER' && isNotCurrentUser){\r\n        const activeSkill = activeFilters.skillFilters.find(activeFilter => \r\n            activeFilter.skillId === skill.skillId.toString() \r\n        )\r\n\r\n        if(activeSkill){\r\n            return !!value.user?.employeeSkills.some(employeeSkill => \r\n                employeeSkill.skill.skillId.toString() === activeSkill.skillId\r\n                && parseInt(employeeSkill.level.levelId) >= parseInt(activeSkill.levelId))\r\n        }\r\n    }\r\n    return false\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/level-select/utils.ts b/frontend/src/components/level-select/utils.ts
--- a/frontend/src/components/level-select/utils.ts	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/level-select/utils.ts	(date 1729937618196)
@@ -1,12 +1,10 @@
-import { ActiveFilters, SkillFilter } from '../../features/activeFilters/activeFiltersSlice';
-import { EmployeeSkill} from '../../features/currentUser/currentUserSlice';
+import { SkillFilter } from '../../features/activeFilters/activeFiltersSlice';
+import { EmployeeSkill, IUser } from '../../features/currentUser/currentUserSlice';
 import { type Level } from '../../app/services/levels';
 import { ThemeMode } from '../../features/theme/themeSlice';
 import { styles as currentStyles } from '../../styles/styles';
-import { LevelType } from './LevelSelect';
-import { Skill } from '../../features/skills/skillsSlice';
 
-export const getColorForLevel = (index: number, theme: ThemeMode, levels: Level[]) : string => {
+export const getColorForLevel = (index: number, theme: ThemeMode, levels: Level[]) => {
     const styles = currentStyles(theme);
 
     const colorStart = styles.level.startColor;
@@ -23,37 +21,18 @@
 };
 
 export const getSelectedLevel = (
-    value: LevelType,
+    value: string,
     skillId: string,
+    currentUser: IUser,
     activeFilters: SkillFilter[],
     levels: Level[]
 ): number => {
-    if (value.type === 'USER' && 'user' in value && value.user) {
-        const userSkill = value.user.employeeSkills.find(
+    if (value === 'USER') {
+        const userSkill = currentUser.employeeSkills.find(
             (employeeSkill: EmployeeSkill) => employeeSkill.skill.skillId === +skillId);
         return userSkill ? levels.findIndex(level => level.levelId === userSkill.level.levelId) + 1 : 0;
     } else {
         const activeFilter = activeFilters.find(filter => filter.skillId === skillId);
         return activeFilter ? levels.findIndex(level => level.levelId === activeFilter.levelId) + 1 : 0;
     }
-};
-
-export const isActiveSkill = (
-    skill : Skill,
-    value : LevelType,
-    isNotCurrentUser : boolean,
-    activeFilters : ActiveFilters
-) : boolean => {
-    if(value.type === 'USER' && isNotCurrentUser){
-        const activeSkill = activeFilters.skillFilters.find(activeFilter => 
-            activeFilter.skillId === skill.skillId.toString() 
-        )
-
-        if(activeSkill){
-            return !!value.user?.employeeSkills.some(employeeSkill => 
-                employeeSkill.skill.skillId.toString() === activeSkill.skillId
-                && parseInt(employeeSkill.level.levelId) >= parseInt(activeSkill.levelId))
-        }
-    }
-    return false
-}
\ No newline at end of file
+};
\ No newline at end of file
Index: frontend/src/pages/Profil.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nimport Layout from '../components/layout/Layout'\r\nimport SkillAccordions from '../components/skills-accordion/SkillAccordions';\r\nimport EmployeeCard from '../components/employee-card/EmployeeCard';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectTheme } from '../features/theme/themeSlice';\r\nimport { centeredFlexBox, styles as currentStyles } from '../styles/styles';\r\nimport { selectCurrentUser } from '../features/currentUser/currentUserSlice';\r\nimport SkillsCheckBox from '../components/skills-checkbox/SkillsCheckBox';\r\nimport { useParams } from 'react-router-dom';\r\nimport { selectEmployees } from '../features/employees/employeesSlice';\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\nconst ProfilPage = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const currentUser = useSelector(selectCurrentUser)\r\n  const employees = useSelector(selectEmployees)\r\n  const theme = useSelector(selectTheme);\r\n  const styles = currentStyles(theme)\r\n  const user = id ? employees.find(employee => employee.employeeId === id) : currentUser\r\n\r\n  if (!user) {\r\n    return <NotFoundPage />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Row className=\"my-4\">\r\n        <EmployeeCard\r\n          user={user}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div style={{ ...centeredFlexBox(), color: 'gray' }}>\r\n            <h4 className=\"mt-2 mb-3\" style={{ ...styles.h }}>\r\n              Fähigkeiten und deren Level\r\n            </h4>\r\n            {!id && <SkillsCheckBox />}\r\n          </div>\r\n          <SkillAccordions\r\n             type=\"USER\"\r\n             user={user}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ProfilPage
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/pages/Profil.tsx b/frontend/src/pages/Profil.tsx
--- a/frontend/src/pages/Profil.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/pages/Profil.tsx	(date 1729937618209)
@@ -6,44 +6,49 @@
 import EmployeeCard from '../components/employee-card/EmployeeCard';
 import { useSelector } from 'react-redux';
 import { selectTheme } from '../features/theme/themeSlice';
-import { centeredFlexBox, styles as currentStyles } from '../styles/styles';
+import { styles as currentStyles } from '../styles/styles';
 import { selectCurrentUser } from '../features/currentUser/currentUserSlice';
 import SkillsCheckBox from '../components/skills-checkbox/SkillsCheckBox';
+<<<<<<< HEAD
 import { useParams } from 'react-router-dom';
 import { selectEmployees } from '../features/employees/employeesSlice';
 import NotFoundPage from './NotFoundPage';
+=======
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
 
 const ProfilPage = () => {
-  const { id } = useParams<{ id: string }>();
   const currentUser = useSelector(selectCurrentUser)
-  const employees = useSelector(selectEmployees)
   const theme = useSelector(selectTheme);
   const styles = currentStyles(theme)
   const user = id ? employees.find(employee => employee.employeeId === id) : currentUser
 
+<<<<<<< HEAD
   if (!user) {
     return <NotFoundPage />;
   }
 
+=======
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
   return (
     <Layout>
       <Row className="my-4">
         <EmployeeCard
-          user={user}
+          user={currentUser}
         />
       </Row>
       <Row>
         <Col>
+<<<<<<< HEAD
           <div style={{ ...centeredFlexBox(), color: 'gray' }}>
+=======
+          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', color: 'gray' }}>
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
             <h4 className="mt-2 mb-3" style={{ ...styles.h }}>
-              Fähigkeiten und deren Level
+              Ihre Fähigkeiten und deren Level
             </h4>
-            {!id && <SkillsCheckBox />}
+            <SkillsCheckBox />
           </div>
-          <SkillAccordions
-             type="USER"
-             user={user}
-          />
+          <SkillAccordions />
         </Col>
       </Row>
     </Layout>
Index: frontend/src/components/employee-list/EmployeeList.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport EmployeeCard from '../../components/employee-card/EmployeeCard'\r\nimport EmployeePagination from '../employee-pagination/EmployeePagination';\r\nimport { IEmployee } from '../../features/currentUser/currentUserSlice';\r\nimport { selectEmployees } from '../../features/employees/employeesSlice';\r\nimport { selectActiveFilters } from '../../features/activeFilters/activeFiltersSlice';\r\nimport { filterEmployees } from './utils';\r\nimport { Paths } from '../../constants/paths';\r\n\r\ninterface IEmployeeListData {\r\n    currentPageEmployees: IEmployee[],\r\n    totalPage: number\r\n}\r\n\r\nconst EmployeeList = () => {\r\n    const employees = useSelector(selectEmployees)\r\n    const activeFilters = useSelector(selectActiveFilters);\r\n    const [data, setData] = useState<IEmployeeListData>({ currentPageEmployees: [], totalPage: 0 })\r\n    const [page, setPage] = useState(1)\r\n    const [filteredEmployees, setFilteredEmployees] = useState<IEmployee[]>([]);\r\n    const navigate = useNavigate();\r\n    const employeeNumber = 10\r\n\r\n\r\n    useEffect(() => {\r\n        const filtered = filterEmployees(employees, activeFilters);\r\n        setFilteredEmployees(filtered);\r\n\r\n        const startIndex = (page - 1) * employeeNumber;\r\n        const endIndex = startIndex + employeeNumber;\r\n\r\n        setData({\r\n            currentPageEmployees: filtered.slice(startIndex, endIndex),\r\n            totalPage: Math.ceil(filtered.length / employeeNumber),\r\n        });\r\n    }, [page, employees, activeFilters]);\r\n\r\n    const handleChangePage = (newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleCardClick = (employeeId: string) => {\r\n        navigate(`${Paths.profile}/${employeeId}`);\r\n    };\r\n\r\n    if (filteredEmployees.length === 0) {\r\n        return <p>Es gibt momentan keine Mitarbeiter, die Ihren Suchkriterien entsprechen</p>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {data.currentPageEmployees.map((employee, index) => (\r\n                <EmployeeCard\r\n                    style={{ cursor: 'pointer' }}\r\n                    key={index}\r\n                    user={employee}\r\n                    onClick={() => handleCardClick(employee.employeeId)}\r\n                />\r\n            ))}\r\n            {data.totalPage > 1 && (\r\n                <EmployeePagination\r\n                    total={data.totalPage}\r\n                    current={page}\r\n                    onChangePage={handleChangePage}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeList
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/employee-list/EmployeeList.tsx b/frontend/src/components/employee-list/EmployeeList.tsx
--- a/frontend/src/components/employee-list/EmployeeList.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/employee-list/EmployeeList.tsx	(date 1729937618190)
@@ -8,11 +8,15 @@
 import { selectEmployees } from '../../features/employees/employeesSlice';
 import { selectActiveFilters } from '../../features/activeFilters/activeFiltersSlice';
 import { filterEmployees } from './utils';
-import { Paths } from '../../constants/paths';
 
 interface IEmployeeListData {
+<<<<<<< HEAD
     currentPageEmployees: IEmployee[],
     totalPage: number
+=======
+    currentPageEmployees : IUser[],
+    totalPage : number
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
 }
 
 const EmployeeList = () => {
@@ -20,10 +24,17 @@
     const activeFilters = useSelector(selectActiveFilters);
     const [data, setData] = useState<IEmployeeListData>({ currentPageEmployees: [], totalPage: 0 })
     const [page, setPage] = useState(1)
+<<<<<<< HEAD
     const [filteredEmployees, setFilteredEmployees] = useState<IEmployee[]>([]);
     const navigate = useNavigate();
     const employeeNumber = 10
 
+=======
+    const employeeNumber = 10
+
+    console.log(employees);
+    
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
 
     useEffect(() => {
         const filtered = filterEmployees(employees, activeFilters);
@@ -42,6 +53,7 @@
         setPage(newPage);
     };
 
+<<<<<<< HEAD
     const handleCardClick = (employeeId: string) => {
         navigate(`${Paths.profile}/${employeeId}`);
     };
@@ -50,14 +62,14 @@
         return <p>Es gibt momentan keine Mitarbeiter, die Ihren Suchkriterien entsprechen</p>
     }
 
+=======
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
     return (
         <>
             {data.currentPageEmployees.map((employee, index) => (
                 <EmployeeCard
-                    style={{ cursor: 'pointer' }}
                     key={index}
                     user={employee}
-                    onClick={() => handleCardClick(employee.employeeId)}
                 />
             ))}
             {data.totalPage > 1 && (
Index: frontend/src/components/level-select/LevelSelect.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { type Level } from '../../app/services/levels';\r\nimport { selectTheme } from '../../features/theme/themeSlice';\r\nimport { addSkillFilter, removeSkillFilter, selectActiveFilters } from '../../features/activeFilters/activeFiltersSlice';\r\nimport { getColorForLevel, getSelectedLevel, isActiveSkill } from './utils';\r\nimport { IEmployee, selectCurrentUser } from '../../features/currentUser/currentUserSlice';\r\nimport { useAddSkillMutation } from '../../app/services/currentUser';\r\nimport { selectSkills } from '../../features/skills/skillsSlice';\r\nimport { FaFilter } from 'react-icons/fa';\r\nimport { useGetLevelsQuery } from '../../app/services/levels';\r\nimport './levelSelect.css';\r\nimport { skillFilterStyle } from '../../styles/styles';\r\n\r\nexport type LevelType = {\r\n    type: 'USER' | 'FILTER' | 'ACTIVE_FILTER',\r\n    user?: IEmployee\r\n}\r\n\r\ninterface SkillLevelSelectorProps {\r\n    skillId: string;\r\n    showAll: boolean;\r\n    value: LevelType\r\n}\r\n\r\nconst LevelSelect: React.FC<SkillLevelSelectorProps> = ({ skillId, showAll, value }) => {\r\n    const [hoveredLevel, setHoveredLevel] = useState<number>(0);\r\n    const dispatch = useDispatch();\r\n    const activeFilters = useSelector(selectActiveFilters);\r\n    const theme = useSelector(selectTheme);\r\n    const currentUser = useSelector(selectCurrentUser)\r\n    const skills = useSelector(selectSkills)\r\n    const { data: levels = [] } = useGetLevelsQuery();\r\n    const [addSkillToEmployee] = useAddSkillMutation()\r\n\r\n    let selectedLevel = getSelectedLevel(value, skillId, activeFilters.skillFilters, levels);\r\n    const skill = skills.find(skill => skill.skillId === +skillId)!\r\n    const isCurrentUser = value.type === 'USER' && value.user?.employeeId === currentUser.employeeId\r\n    const isNotCurrentUser = value.type === 'USER' && value.user?.employeeId !== currentUser.employeeId\r\n    const activeSkill = isActiveSkill(skill, value, isNotCurrentUser, activeFilters)\r\n    const isActiveFilter = value.type === 'FILTER' && selectedLevel > 0\r\n\r\n    const addActiveFilter = (level: Level) => {\r\n        dispatch(addSkillFilter({ levelId: level.levelId, skillId }));\r\n    };\r\n\r\n    const addCurrentUserSkill = async (level: Level) => {\r\n        try {\r\n            await addSkillToEmployee({\r\n                skill,\r\n                level\r\n            }).unwrap();\r\n        } catch (error) {\r\n            console.error(\"Failed to add skill:\", error);\r\n        }\r\n    };\r\n\r\n    const handleLevelClick = (level: Level) => {\r\n        if (isCurrentUser) {\r\n            addCurrentUserSkill(level);\r\n        } else if (value.type === 'FILTER') {\r\n            addActiveFilter(level);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <label>\r\n                {skill?.skillName}\r\n                {activeSkill ? <FaFilter style={skillFilterStyle} /> : null}\r\n            </label>\r\n            <div className=\"d-flex align-items-center\">\r\n                {levels.map((level, index) => (\r\n                    (showAll || index + 1 <= selectedLevel) && (\r\n                        <div\r\n                            key={index}\r\n                            title={level.levelName}\r\n                            onMouseEnter={isNotCurrentUser || value.type === 'ACTIVE_FILTER' ? undefined : () => setHoveredLevel(index + 1)}\r\n                            onMouseLeave={isNotCurrentUser || value.type === 'ACTIVE_FILTER'  ? undefined : () => setHoveredLevel(0)}\r\n                            className=\"level\"\r\n                            style={{\r\n                                backgroundColor:\r\n                                    index + 1 <= (hoveredLevel || selectedLevel)\r\n                                        ? getColorForLevel(index, theme, levels)\r\n                                        : '#e9ecef',\r\n                            }}\r\n                            onClick={() => handleLevelClick(level)}\r\n                        />\r\n                    )\r\n                ))}\r\n                {isActiveFilter && (\r\n                    <span\r\n                        className=\"remove-filter\"\r\n                        onClick={() => dispatch(removeSkillFilter(skillId))}\r\n                    >\r\n                        ×\r\n                    </span>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LevelSelect;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/level-select/LevelSelect.tsx b/frontend/src/components/level-select/LevelSelect.tsx
--- a/frontend/src/components/level-select/LevelSelect.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/level-select/LevelSelect.tsx	(date 1729937618194)
@@ -3,13 +3,20 @@
 
 import { type Level } from '../../app/services/levels';
 import { selectTheme } from '../../features/theme/themeSlice';
+<<<<<<< HEAD
 import { addSkillFilter, removeSkillFilter, selectActiveFilters } from '../../features/activeFilters/activeFiltersSlice';
 import { getColorForLevel, getSelectedLevel, isActiveSkill } from './utils';
 import { IEmployee, selectCurrentUser } from '../../features/currentUser/currentUserSlice';
+=======
+import { addSkillFilter, selectActiveFilters } from '../../features/activeFilters/activeFiltersSlice';
+import { getColorForLevel, getSelectedLevel } from './utils';
+import { selectCurrentUser } from '../../features/currentUser/currentUserSlice';
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
 import { useAddSkillMutation } from '../../app/services/currentUser';
 import { selectSkills } from '../../features/skills/skillsSlice';
 import { FaFilter } from 'react-icons/fa';
 import { useGetLevelsQuery } from '../../app/services/levels';
+<<<<<<< HEAD
 import './levelSelect.css';
 import { skillFilterStyle } from '../../styles/styles';
 
@@ -17,9 +24,13 @@
     type: 'USER' | 'FILTER' | 'ACTIVE_FILTER',
     user?: IEmployee
 }
+=======
+
+export type LevelType = 'USER' | 'FILTER' | 'ACTIVE_FILTER'
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
 
 interface SkillLevelSelectorProps {
-    skillId: string;
+    skillId : string;
     showAll: boolean;
     value: LevelType
 }
@@ -34,18 +45,21 @@
     const { data: levels = [] } = useGetLevelsQuery();
     const [addSkillToEmployee] = useAddSkillMutation()
 
-    let selectedLevel = getSelectedLevel(value, skillId, activeFilters.skillFilters, levels);
+    let selectedLevel = getSelectedLevel(value, skillId, currentUser, activeFilters.skillFilters, levels);
     const skill = skills.find(skill => skill.skillId === +skillId)!
+<<<<<<< HEAD
     const isCurrentUser = value.type === 'USER' && value.user?.employeeId === currentUser.employeeId
     const isNotCurrentUser = value.type === 'USER' && value.user?.employeeId !== currentUser.employeeId
     const activeSkill = isActiveSkill(skill, value, isNotCurrentUser, activeFilters)
     const isActiveFilter = value.type === 'FILTER' && selectedLevel > 0
+=======
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
 
-    const addActiveFilter = (level: Level) => {
+    const addActiveFilter = (level : Level) => {
         dispatch(addSkillFilter({ levelId: level.levelId, skillId }));
     };
 
-    const addCurrentUserSkill = async (level: Level) => {
+    const addCurrentUserSkill = async (level: Level) => {        
         try {
             await addSkillToEmployee({
                 skill,
@@ -57,9 +71,9 @@
     };
 
     const handleLevelClick = (level: Level) => {
-        if (isCurrentUser) {
+        if (value === 'USER') {
             addCurrentUserSkill(level);
-        } else if (value.type === 'FILTER') {
+        } else if (value === 'FILTER') {
             addActiveFilter(level);
         }
     };
@@ -76,9 +90,15 @@
                         <div
                             key={index}
                             title={level.levelName}
+<<<<<<< HEAD
                             onMouseEnter={isNotCurrentUser || value.type === 'ACTIVE_FILTER' ? undefined : () => setHoveredLevel(index + 1)}
                             onMouseLeave={isNotCurrentUser || value.type === 'ACTIVE_FILTER'  ? undefined : () => setHoveredLevel(0)}
                             className="level"
+=======
+                            onMouseEnter={() => setHoveredLevel(index + 1)}
+                            onMouseLeave={() => setHoveredLevel(0)}
+                            className='level'
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
                             style={{
                                 backgroundColor:
                                     index + 1 <= (hoveredLevel || selectedLevel)
Index: frontend/src/components/employee-card/EmployeeCard.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport {\r\n    FaEnvelope,\r\n    FaBuilding,\r\n    FaBriefcase,\r\n    FaPhone,\r\n    FaMapMarkerAlt,\r\n    FaHome\r\n} from 'react-icons/fa'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectTheme } from '../../features/theme/themeSlice';\r\nimport { styles as currentStyles } from '../../styles/styles';\r\nimport { IEmployee } from '../../features/currentUser/currentUserSlice';\r\nimport ProfilePhoto from '../profile-photo/ProfilePhoto';\r\n\r\ninterface EmployeeCardProps {\r\n    user: IEmployee;\r\n    style?: React.CSSProperties;\r\n    onClick?: (id: string) => void;\r\n}\r\n\r\nconst EmployeeCard: React.FC<EmployeeCardProps> = ({ user, style, onClick }) => {\r\n    const { displayName, jobTitle, department, officeLocation, streetAddress, city, postalCode, mail, mobilePhone, photo } = user;\r\n\r\n    const theme = useSelector(selectTheme)\r\n    const styles = currentStyles(theme)\r\n\r\n    return (\r\n        <Card\r\n            className=\"mb-3\"\r\n            style={{ ...styles.card, ...style }}\r\n            onClick={onClick ? () => onClick(user.employeeId) : undefined}\r\n        >\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col md={4} className=\"text-center\">\r\n                        <ProfilePhoto theme={theme} photo={photo} />\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <Card.Title className='mb-3' style={{ fontWeight: 'bold' }}>{displayName}</Card.Title>\r\n                        <CardText\r\n                            description='Email :'\r\n                            text={mail}\r\n                            icon={<FaEnvelope />}\r\n                        />\r\n                        <CardText\r\n                            description='Bürolage :'\r\n                            text={officeLocation}\r\n                            icon={<FaMapMarkerAlt />}\r\n                        />\r\n                        <CardText\r\n                            description='Abteilung :'\r\n                            text={department}\r\n                            icon={<FaBuilding />}\r\n                        />\r\n                        <CardText\r\n                            description='Position :'\r\n                            text={jobTitle}\r\n                            icon={<FaBriefcase />}\r\n                        />\r\n                        <CardText\r\n                            description='Wohnanschrift :'\r\n                            text={getAddress(streetAddress, city, postalCode)}\r\n                            icon={<FaHome />}\r\n                        />\r\n                        <CardText\r\n                            description='Telefon :'\r\n                            text={mobilePhone}\r\n                            icon={<FaPhone />}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card >\r\n    );\r\n};\r\n\r\nexport default EmployeeCard;\r\n\r\ninterface CardTextProps {\r\n    description: string,\r\n    text: string | null,\r\n    icon: JSX.Element,\r\n}\r\n\r\ntype Text = string | null;\r\n\r\nconst isValidText = (text: Text): boolean => !!text && text !== \"null\";\r\n\r\nconst CardText: React.FC<CardTextProps> = ({ text, icon, description }) => {\r\n    if (!isValidText(text)) return null;\r\n\r\n    return <Card.Text className='mb-2'>{icon} {description} {text}</Card.Text>\r\n}\r\n\r\nconst getAddress = (streetAddress: Text, city: Text, postalCode: Text): string | null => {\r\n    if (!isValidText(streetAddress) || !isValidText(city) || !isValidText(postalCode)) {\r\n        return null;\r\n    }\r\n    return `${streetAddress}, ${postalCode} ${city}`;\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/employee-card/EmployeeCard.tsx b/frontend/src/components/employee-card/EmployeeCard.tsx
--- a/frontend/src/components/employee-card/EmployeeCard.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/employee-card/EmployeeCard.tsx	(date 1729937618188)
@@ -15,6 +15,7 @@
 import ProfilePhoto from '../profile-photo/ProfilePhoto';
 
 interface EmployeeCardProps {
+<<<<<<< HEAD
     user: IEmployee;
     style?: React.CSSProperties;
     onClick?: (id: string) => void;
@@ -22,16 +23,22 @@
 
 const EmployeeCard: React.FC<EmployeeCardProps> = ({ user, style, onClick }) => {
     const { displayName, jobTitle, department, officeLocation, streetAddress, city, postalCode, mail, mobilePhone, photo } = user;
+=======
+    user: IUser;
+}
+
+const EmployeeCard: React.FC<EmployeeCardProps> = ({ user }) => {
+    const { displayName, jobTitle, email, mobilePhone, photo, groups } = user;
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
 
     const theme = useSelector(selectTheme)
     const styles = currentStyles(theme)
 
+    console.log(groups);
+    
+
     return (
-        <Card
-            className="mb-3"
-            style={{ ...styles.card, ...style }}
-            onClick={onClick ? () => onClick(user.employeeId) : undefined}
-        >
+        <Card className="mb-3" style={styles.card}>
             <Card.Body>
                 <Row>
                     <Col md={4} className="text-center">
@@ -39,6 +46,7 @@
                     </Col>
                     <Col md={8}>
                         <Card.Title className='mb-3' style={{ fontWeight: 'bold' }}>{displayName}</Card.Title>
+<<<<<<< HEAD
                         <CardText
                             description='Email :'
                             text={mail}
@@ -69,6 +77,14 @@
                             text={mobilePhone}
                             icon={<FaPhone />}
                         />
+=======
+                        <Card.Text className="mb-2"><FaEnvelope /> Email: {email}</Card.Text>
+                        <Card.Text className="mb-2"><FaBriefcase /> Position: {jobTitle}</Card.Text>
+                        <Card.Text className="mb-2">
+                            <FaBuilding /> Abteilung: {groups && groups.length > 0 ? groups[0].displayName : 'Nicht angegeben'}
+                        </Card.Text>
+                        <Card.Text className="mb-2"><FaPhone /> Telefon: {mobilePhone}</Card.Text>
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
                     </Col>
                 </Row>
             </Card.Body>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8a2fbda8-20e1-4e01-9d22-741a966261eb\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/data/EmployeeInitializer.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/backend/src/main/resources/application.properties\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/CurrentUserController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/CurrentUserController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/EmployeesController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/EmployeesController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/AzureUser.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/AzureUser.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/EmployeeSkill.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/EmployeeSkill.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/EmployeeSkillId.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/repository/EmployeeRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/repository/EmployeeRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/repository/EmployeeSkillRepository.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/repository/EmployeeSkillRepository.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/service/AzureUserService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/service/AzureUserService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/service/EmployeeProfileService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/service/EmployeeProfileService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/service/EmployeeService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/service/EmployeeService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/service/EmployeeSkillService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/backend/src/main/java/com/quinscape/service/EmployeeSkillService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/frontend/src/components/employee-list/EmployeeList.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/src/components/employee-list/EmployeeList.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/frontend/src/components/level-select/LevelSelect.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/src/components/level-select/LevelSelect.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/frontend/src/components/skills-accordion/AccordionHeader.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/src/components/skills-accordion/AccordionHeader.tsx\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/frontend/src/components/skills-accordion/utils.ts\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/src/components/skills-accordion/utils.ts\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/frontend/src/pages/Profil.tsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/src/pages/Profil.tsx\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"isToolWindowVisible\" value=\"false\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2j6PYKXAt3toTL4f7sx7PHEsI4B\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/vhavryliuk/Desktop/talend_match/backend/src/main/resources&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.haulmont.jpb.viewMode&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;fe01ce2a7fbac8fafaed7c982a04e229&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;postgresql&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"com.quinscape.controller\" />\r\n      <recent name=\"com.quinscape.security.config\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\vhavryliuk\\Desktop\\talend_match\\backend\\src\\main\\resources\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\vhavryliuk\\Desktop\\talend_match\\backend\\src\\main\\resources\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"com.talend_match\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"DemoApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\">\r\n      <module name=\"demo\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.quinscape.TalendMatchApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8a2fbda8-20e1-4e01-9d22-741a966261eb\" name=\"Changes\" comment=\"\" />\r\n      <created>1720704603143</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1720704603143</updated>\r\n      <workItem from=\"1720704606271\" duration=\"606000\" />\r\n      <workItem from=\"1720926900589\" duration=\"4360000\" />\r\n      <workItem from=\"1720941622238\" duration=\"63000\" />\r\n      <workItem from=\"1721148196620\" duration=\"5456000\" />\r\n      <workItem from=\"1721224275358\" duration=\"5451000\" />\r\n      <workItem from=\"1721330557794\" duration=\"3858000\" />\r\n      <workItem from=\"1721396137686\" duration=\"3125000\" />\r\n      <workItem from=\"1721497368692\" duration=\"599000\" />\r\n      <workItem from=\"1721531964783\" duration=\"2537000\" />\r\n      <workItem from=\"1721534521374\" duration=\"6808000\" />\r\n      <workItem from=\"1721641043365\" duration=\"4625000\" />\r\n      <workItem from=\"1724248613644\" duration=\"4827000\" />\r\n      <workItem from=\"1727881753655\" duration=\"41000\" />\r\n      <workItem from=\"1727881868934\" duration=\"743000\" />\r\n      <workItem from=\"1727883427325\" duration=\"31000\" />\r\n      <workItem from=\"1727948534432\" duration=\"5680000\" />\r\n      <workItem from=\"1728116081293\" duration=\"1748000\" />\r\n      <workItem from=\"1728194774539\" duration=\"3559000\" />\r\n      <workItem from=\"1728232239370\" duration=\"1245000\" />\r\n      <workItem from=\"1728269489041\" duration=\"5921000\" />\r\n      <workItem from=\"1728312363584\" duration=\"1206000\" />\r\n      <workItem from=\"1728384232655\" duration=\"2406000\" />\r\n      <workItem from=\"1728491577765\" duration=\"31000\" />\r\n      <workItem from=\"1728918444837\" duration=\"1274000\" />\r\n      <workItem from=\"1728972478861\" duration=\"8787000\" />\r\n      <workItem from=\"1729064804287\" duration=\"4468000\" />\r\n      <workItem from=\"1729104058310\" duration=\"6743000\" />\r\n      <workItem from=\"1729154497140\" duration=\"2155000\" />\r\n      <workItem from=\"1729336299399\" duration=\"1220000\" />\r\n      <workItem from=\"1729434383998\" duration=\"625000\" />\r\n      <workItem from=\"1729494810610\" duration=\"7809000\" />\r\n      <workItem from=\"1729595586824\" duration=\"96000\" />\r\n      <workItem from=\"1729596430014\" duration=\"2824000\" />\r\n      <workItem from=\"1729669748362\" duration=\"6509000\" />\r\n      <workItem from=\"1729754346463\" duration=\"659000\" />\r\n      <workItem from=\"1729834126434\" duration=\"3382000\" />\r\n      <workItem from=\"1729851790484\" duration=\"4043000\" />\r\n      <workItem from=\"1729925528194\" duration=\"8505000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <watches-manager>\r\n      <configuration name=\"SpringBootApplicationConfigurationType\">\r\n        <watch expression=\"userDetails\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/.idea/workspace.xml	(date 1729937618181)
@@ -8,6 +8,7 @@
       <change afterPath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/data/EmployeeInitializer.java" afterDir="false" />
       <change afterPath="$PROJECT_DIR$/backend/src/main/resources/application.properties" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+<<<<<<< HEAD
       <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/CurrentUserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/CurrentUserController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/EmployeesController.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/EmployeesController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/AzureUser.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/AzureUser.java" afterDir="false" />
@@ -24,6 +25,23 @@
       <change beforePath="$PROJECT_DIR$/frontend/src/components/skills-accordion/AccordionHeader.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/skills-accordion/AccordionHeader.tsx" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/frontend/src/components/skills-accordion/utils.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/skills-accordion/utils.ts" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/frontend/src/pages/Profil.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/pages/Profil.tsx" afterDir="false" />
+=======
+      <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/EmployeeProfileController.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/controller/EmployeeProfileController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/mapper/AzureUserMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/mapper/AzureUserMapper.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/AzureUser.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/AzureUser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/EmployeeProfile.java" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/main/java/com/quinscape/model/EmployeeProfile.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/AppInitializer.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/AppInitializer.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/app/services/currentUser.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/services/currentUser.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/components/active-filters/ActiveFilters.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/active-filters/ActiveFilters.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/components/employee-card/EmployeeCard.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/employee-card/EmployeeCard.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/components/employee-list/EmployeeList.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/employee-list/EmployeeList.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/components/level-select/LevelSelect.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/level-select/LevelSelect.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/components/skills-checkbox/SkillsCheckBox.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/skills-checkbox/SkillsCheckBox.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/features/currentUser/currentUserSlice.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/features/currentUser/currentUserSlice.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/features/employees/employeesSlice.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/features/employees/employeesSlice.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/features/skills/skillsSlice.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/features/skills/skillsSlice.ts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/hooks/useLoadData.ts" beforeDir="false" />
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -150,12 +168,16 @@
       <workItem from="1729434383998" duration="625000" />
       <workItem from="1729494810610" duration="7809000" />
       <workItem from="1729595586824" duration="96000" />
+<<<<<<< HEAD
       <workItem from="1729596430014" duration="2824000" />
       <workItem from="1729669748362" duration="6509000" />
       <workItem from="1729754346463" duration="659000" />
       <workItem from="1729834126434" duration="3382000" />
       <workItem from="1729851790484" duration="4043000" />
       <workItem from="1729925528194" duration="8505000" />
+=======
+      <workItem from="1729596430014" duration="1524000" />
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
     </task>
     <servers />
   </component>
Index: frontend/src/features/currentUser/currentUserSlice.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { createSlice } from '@reduxjs/toolkit';\r\nimport { RootState } from \"../../app/store\";\r\nimport { type Level } from '../../app/services/levels';\r\nimport { type Skill } from '../skills/skillsSlice';\r\nimport { currentUserApi } from '../../app/services/currentUser';\r\n\r\nexport interface EmployeeSkill {\r\n  skill: Skill,\r\n  level: Level\r\n}\r\n\r\nexport interface IEmployee {\r\n  employeeId: string;\r\n  skillsVisibility: boolean;\r\n  displayName: string;\r\n  mail: string;\r\n  jobTitle: string;\r\n  department: string;\r\n  officeLocation: string;\r\n  streetAddress: string;\r\n  city: string;\r\n  postalCode: string;\r\n  mobilePhone: string;\r\n  photo: string | null;\r\n  employeeSkills: EmployeeSkill[];\r\n}\r\n\r\nconst initialState: IEmployee = {\r\n  employeeId: '',\r\n  skillsVisibility: false,\r\n  displayName: '',\r\n  mail: '',\r\n  jobTitle: '',\r\n  department: '',\r\n  officeLocation: '',\r\n  streetAddress: '',\r\n  city: '',\r\n  postalCode: '',\r\n  mobilePhone: '',\r\n  photo: null,\r\n  employeeSkills: [],\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'currentUser',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addMatcher(currentUserApi.endpoints.getCurrentUser.matchFulfilled, (state, action) => {\r\n        return action.payload\r\n      })\r\n      .addMatcher(currentUserApi.endpoints.addSkill.matchFulfilled, (state, action) => {\r\n        const { skill, level } = action.meta.arg.originalArgs;\r\n\r\n        const existingSkill = state.employeeSkills.findIndex(\r\n          employeeSkill => employeeSkill.skill.skillId === skill.skillId\r\n        );\r\n\r\n        if (existingSkill === -1) {\r\n          state.employeeSkills.push({ skill, level });\r\n        } else if (state.employeeSkills[existingSkill].level.levelId !== level.levelId) {\r\n          state.employeeSkills[existingSkill].level = level;\r\n        }\r\n      })\r\n      .addMatcher(currentUserApi.endpoints.toggleSkillsVisibility.matchFulfilled, (state, action) => {\r\n        const { skillsVisibility } = action.meta.arg.originalArgs;\r\n        state.skillsVisibility = skillsVisibility\r\n      })\r\n  }\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const selectCurrentUser = (state: RootState) => state.currentUserreducer\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/features/currentUser/currentUserSlice.ts b/frontend/src/features/currentUser/currentUserSlice.ts
--- a/frontend/src/features/currentUser/currentUserSlice.ts	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/features/currentUser/currentUserSlice.ts	(date 1729937618208)
@@ -13,6 +13,7 @@
   employeeId: string;
   skillsVisibility: boolean;
   displayName: string;
+<<<<<<< HEAD
   mail: string;
   jobTitle: string;
   department: string;
@@ -20,6 +21,12 @@
   streetAddress: string;
   city: string;
   postalCode: string;
+=======
+  givenName: string;
+  surname: string;
+  jobTitle: string;
+  email: string;
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
   mobilePhone: string;
   photo: string | null;
   employeeSkills: EmployeeSkill[];
@@ -29,6 +36,7 @@
   employeeId: '',
   skillsVisibility: false,
   displayName: '',
+<<<<<<< HEAD
   mail: '',
   jobTitle: '',
   department: '',
@@ -36,6 +44,12 @@
   streetAddress: '',
   city: '',
   postalCode: '',
+=======
+  givenName: '',
+  surname: '',
+  jobTitle: '',
+  email: '',
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
   mobilePhone: '',
   photo: null,
   employeeSkills: [],
Index: frontend/src/styles/styles.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { ThemeMode } from \"../features/theme/themeSlice\";\r\n\r\nexport const styles = (theme: ThemeMode) => {\r\n  return {\r\n    container: {\r\n      backgroundColor: theme === 'dark' ? '#1D2125' : 'white',\r\n      color: theme === 'dark' ? '#B6C2CF' : '#212529'\r\n    },\r\n    navbar: {\r\n      backgroundColor: 'rgb(240, 240, 240)',\r\n      borderBlockEnd: '2px solid #ebecf0',\r\n    },\r\n    navLink: {\r\n      color: 'gray',\r\n    },\r\n    navLinkActive: {\r\n      color: 'black',\r\n    },\r\n    navbarButton: {\r\n      color: '#000',\r\n      backgroundColor: 'transparent',\r\n      borderColor: 'transparent',\r\n    },\r\n    iconColor: {\r\n      default: '#172b4d',\r\n      backgroundHover: '#D2D2D2',\r\n    },\r\n    card: {\r\n      color: theme === 'dark' ? '#B6C2CF' : '#212529',\r\n      border: theme === 'dark' ? '1px solid #384148' : '1px solid #dfe1e6',\r\n      backgroundColor: theme === 'dark' ? '#22272B' : 'transparent'\r\n    },\r\n    h: {\r\n      color: theme === 'dark' ? '#B6C2CF' : '#333'\r\n    },\r\n    level: {\r\n      startColor: '#ECF9A1',\r\n      endColor: '#B2CC1D'\r\n    }\r\n  }\r\n};\r\n\r\nexport const centeredFlexBox = (justifyContent = 'space-between') => {\r\n  return {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent\r\n  }\r\n}\r\n\r\nexport const skillFilterStyle = {\r\n  fontSize: '12px',\r\n  marginBottom: '3px',\r\n  marginLeft: '3px',\r\n  color: 'grey'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/styles/styles.ts b/frontend/src/styles/styles.ts
--- a/frontend/src/styles/styles.ts	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/styles/styles.ts	(date 1729937618213)
@@ -2,9 +2,9 @@
 
 export const styles = (theme: ThemeMode) => {
   return {
-    container: {
+    container : {
       backgroundColor: theme === 'dark' ? '#1D2125' : 'white',
-      color: theme === 'dark' ? '#B6C2CF' : '#212529'
+      color :  theme === 'dark' ? '#B6C2CF' : '#212529' 
     },
     navbar: {
       backgroundColor: 'rgb(240, 240, 240)',
@@ -18,28 +18,29 @@
     },
     navbarButton: {
       color: '#000',
-      backgroundColor: 'transparent',
+      backgroundColor : 'transparent',
       borderColor: 'transparent',
     },
-    iconColor: {
+     iconColor: {
       default: '#172b4d',
-      backgroundHover: '#D2D2D2',
+      backgroundHover : '#D2D2D2',
     },
-    card: {
-      color: theme === 'dark' ? '#B6C2CF' : '#212529',
+    card : {
+      color: theme === 'dark' ? '#B6C2CF' :'#212529',
       border: theme === 'dark' ? '1px solid #384148' : '1px solid #dfe1e6',
-      backgroundColor: theme === 'dark' ? '#22272B' : 'transparent'
+      backgroundColor : theme === 'dark' ? '#22272B' : 'transparent'
     },
-    h: {
-      color: theme === 'dark' ? '#B6C2CF' : '#333'
+    h : {
+      color : theme === 'dark' ? '#B6C2CF' : '#333'
     },
-    level: {
-      startColor: '#ECF9A1',
-      endColor: '#B2CC1D'
+    level : {
+      startColor : '#ECF9A1',
+      endColor : '#B2CC1D'
     }
   }
 };
 
+<<<<<<< HEAD
 export const centeredFlexBox = (justifyContent = 'space-between') => {
   return {
     display: 'flex',
@@ -54,3 +55,5 @@
   marginLeft: '3px',
   color: 'grey'
 }
+=======
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
Index: frontend/src/components/active-filters/ActiveFilters.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { selectTheme } from '../../features/theme/themeSlice';\r\nimport { removeSkillFilter, selectActiveFilters } from '../../features/activeFilters/activeFiltersSlice';\r\nimport LevelSelect from '../level-select/LevelSelect';\r\nimport { styles as currentStyles } from '../../styles/styles';\r\nimport './activeFilter.css'\r\nimport { Row } from 'react-bootstrap';\r\n\r\n\r\nconst ActiveFilters = () => {\r\n    const activeFilters = useSelector(selectActiveFilters);\r\n    const dispatch = useDispatch();\r\n    const theme = useSelector(selectTheme);\r\n    const styles = currentStyles(theme);\r\n\r\n    if (activeFilters.skillFilters.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Row className=\"my-3\">\r\n            <div className=\"filters-container\">\r\n                {activeFilters.skillFilters.map((filter) => {\r\n                    return (\r\n                        <div key={filter.skillId} className=\"filter-item\" style={styles.card}>\r\n                            <LevelSelect\r\n                                skillId={filter.skillId}\r\n                                showAll={false}\r\n                                value={{ type: 'ACTIVE_FILTER' }}\r\n                            />\r\n                            <span\r\n                                className=\"remove-filter\"\r\n                                onClick={() => dispatch(removeSkillFilter(filter.skillId))}\r\n                            >\r\n                                ×\r\n                            </span>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </Row>\r\n    );\r\n\r\n}\r\n\r\nexport default ActiveFilters
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/active-filters/ActiveFilters.tsx b/frontend/src/components/active-filters/ActiveFilters.tsx
--- a/frontend/src/components/active-filters/ActiveFilters.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/components/active-filters/ActiveFilters.tsx	(date 1729937618186)
@@ -28,7 +28,7 @@
                             <LevelSelect
                                 skillId={filter.skillId}
                                 showAll={false}
-                                value={{ type: 'ACTIVE_FILTER' }}
+                                value='ACTIVE_FILTER'
                             />
                             <span
                                 className="remove-filter"
Index: frontend/src/router/router.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { createBrowserRouter, Navigate } from 'react-router-dom';\r\n\r\nimport { Paths } from '../constants/paths';\r\nimport ProfilPage from '../pages/Profil';\r\nimport SuchePage from '../pages/Suche';\r\nimport NotFoundPage from '../pages/NotFoundPage';\r\n\r\n\r\nexport const router = createBrowserRouter([\r\n  {\r\n    path: '/',\r\n    element: <Navigate to={Paths.profile} replace />,\r\n  },\r\n  {\r\n    path: Paths.profile,\r\n    element: <ProfilPage />\r\n  },\r\n  {\r\n    path: Paths.search,\r\n    element: <SuchePage />\r\n  },\r\n  {\r\n    path: `${Paths.profile}/:id`,\r\n    element: <ProfilPage />\r\n  },\r\n  {\r\n    path: '*',\r\n    element: <NotFoundPage />\r\n  }  \r\n]);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/router/router.tsx b/frontend/src/router/router.tsx
--- a/frontend/src/router/router.tsx	(revision 70bc26e041abdbc0418bb704c1b4e98ff467b6e7)
+++ b/frontend/src/router/router.tsx	(date 1729937618211)
@@ -1,4 +1,4 @@
-import { createBrowserRouter, Navigate } from 'react-router-dom';
+import { createBrowserRouter } from 'react-router-dom';
 
 import { Paths } from '../constants/paths';
 import ProfilPage from '../pages/Profil';
@@ -8,17 +8,14 @@
 
 export const router = createBrowserRouter([
   {
-    path: '/',
-    element: <Navigate to={Paths.profile} replace />,
-  },
-  {
-    path: Paths.profile,
+    path: Paths.home,
     element: <ProfilPage />
   },
   {
     path: Paths.search,
     element: <SuchePage />
   },
+<<<<<<< HEAD
   {
     path: `${Paths.profile}/:id`,
     element: <ProfilPage />
@@ -27,4 +24,6 @@
     path: '*',
     element: <NotFoundPage />
   }  
+=======
+>>>>>>> parent of 36c35d5 (add skill filter logic for other employees)
 ]);
\ No newline at end of file
